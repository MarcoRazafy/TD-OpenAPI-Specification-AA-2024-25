openapi: 3.0.3
info:
  title: TD OAS - Exo 6 - UserProfile & Subresources
  version: 1.0.0
servers:
  - url: https://api.example.com
components:
  parameters:
    UserId:
      name: id
      in: path
      required: true
      schema: { type: string }
  schemas:
    PersonalInfo:
      type: object
      required: [first_name, last_name, birthdate, email]
      properties:
        first_name: { type: string, example: Fely }
        last_name:  { type: string, example: Randriam }
        birthdate:  { type: string, format: date, example: '2000-05-10' }
        email:      { type: string, format: email, example: fely@example.com }
    Address:
      type: object
      required: [address_street, address_city, address_country, address_postal_code]
      properties:
        address_street: { type: string, example: Lot II A 123 }
        address_city:   { type: string, example: Antananarivo }
        address_country:{ type: string, example: MG }
        address_postal_code:
          type: string
          pattern: '^[0-9]+$'
          example: '101'
    Preferences:
      type: object
      required: [needs_newsletter, language]
      properties:
        needs_newsletter: { type: boolean, example: true }
        language:
          type: string
          enum: [mg, fr, eng]
          example: fr
    CreateUserProfile:
      allOf:
        - $ref: '#/components/schemas/PersonalInfo'
        - $ref: '#/components/schemas/Address'
        - $ref: '#/components/schemas/Preferences'
      description: Données de création (sans identifiant).
    UserProfile:
      allOf:
        - type: object
          required: [identifier]
          properties:
            identifier: { type: string, example: usr_abc123 }
        - $ref: '#/components/schemas/PersonalInfo'
        - $ref: '#/components/schemas/Address'
        - $ref: '#/components/schemas/Preferences'
paths:
  /users/{id}:
    get:
      summary: Récupérer un utilisateur complet
      parameters: [ { $ref: '#/components/parameters/UserId' } ]
      responses:
        '200':
          description: Utilisateur trouvé
          content:
            application/json:
              schema: { $ref: '#/components/schemas/UserProfile' }
  /users:
    post:
      summary: Créer une liste d'utilisateurs (sans identifiants)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items: { $ref: '#/components/schemas/CreateUserProfile' }
      responses:
        '201':
          description: Utilisateurs créés (identifiants générés serveur)
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/UserProfile' }
  /users/{id}/personalInfo:
    put:
      summary: Mettre à jour la section informations personnelles
      parameters: [ { $ref: '#/components/parameters/UserId' } ]
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/PersonalInfo' }
      responses:
        '200':
          description: Profil mis à jour (partie PersonalInfo)
          content:
            application/json:
              schema: { $ref: '#/components/schemas/UserProfile' }
  /users/{id}/address:
    put:
      summary: Mettre à jour l'adresse
      parameters: [ { $ref: '#/components/parameters/UserId' } ]
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Address' }
      responses:
        '200':
          description: Profil mis à jour (partie Address)
          content:
            application/json:
              schema: { $ref: '#/components/schemas/UserProfile' }
  /users/{id}/preferences:
    put:
      summary: Mettre à jour les préférences
      parameters: [ { $ref: '#/components/parameters/UserId' } ]
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Preferences' }
      responses:
        '200':
          description: Profil mis à jour (partie Preferences)
          content:
            application/json:
              schema: { $ref: '#/components/schemas/UserProfile' }
