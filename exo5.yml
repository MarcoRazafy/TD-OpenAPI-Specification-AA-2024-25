openapi: 3.0.3
info:
  title: TD OAS - Exo 5 - Products & Orders with Auth
  version: 1.0.0
servers:
  - url: https://api.example.com
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  parameters:
    PageParam:
      name: page
      in: query
      required: false
      schema: { type: integer, minimum: 1 }
      example: 1
    SizeParam:
      name: size
      in: query
      required: false
      schema: { type: integer, minimum: 1, maximum: 200 }
      example: 20
  schemas:
    Product:
      type: object
      required: [name, expiration_datetime, price]
      properties:
        name: { type: string }
        expiration_datetime: { type: string, format: date-time }
        price: { type: number, format: float }
    Order:
      type: object
      required: [identifier, customer_name, creation_datetime, total_amount]
      properties:
        identifier: { type: integer, example: 1001 }
        customer_name: { type: string, example: John Doe }
        creation_datetime: { type: string, format: date-time, example: '2025-08-31T12:00:00Z' }
        total_amount: { type: number, format: float, example: 59.9 }
paths:
  /products:
    get:
      tags: [Products]
      summary: Lister les produits
      responses:
        '200':
          description: Liste de produits
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Product' }
              examples:
                sample:
                  value:
                    - name: Arabica Coffee
                      expiration_datetime: '2025-12-31T23:59:59Z'
                      price: 12.5
  /orders:
    get:
      tags: [Orders]
      summary: Liste paginée des commandes
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SizeParam'
      responses:
        '200':
          description: Liste de commandes
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Order' }
              examples:
                sample:
                  value:
                    - identifier: 1001
                      customer_name: John Doe
                      creation_datetime: '2025-08-31T12:00:00Z'
                      total_amount: 59.9
    post:
      tags: [Orders]
      summary: Créer une commande
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Order' }
            examples:
              createExample:
                value:
                  identifier: 1002
                  customer_name: Jane Smith
                  creation_datetime: '2025-08-31T13:30:00Z'
                  total_amount: 89.0
      responses:
        '201':
          description: Commande créée
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Order' }
